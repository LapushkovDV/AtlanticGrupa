//------------------------------------------------------------------------------
//                                                      (c) корпорация Галактика
// Версия      : 8.10
// Назначение  : Функции для встраивания интерфейса с внешними атрибутами в документ
//------------------------------------------------------------------------------
//
//  Параметры:
//    _wTable      - co-код Таблицы
//    _cRec        - ссылка на запись в таблице


#ifndef _Attribute
#define _Attribute

#ifdef ComponentVersion
#component "C_ExtClass"
#endif

//**************************************************************
//   атрибуты документов
//**************************************************************

#doc
Функции для встраивания интерфейса с внешними атрибутами в документ. <br>
</brief>
<H5>Пример</H5>
<PRE class=example>
Чтобы встроить интерфейс внешних атрибутов в другой интерфейс необходимо:
1) подключить
  ##include Attribu_.vih
2) объявить переменную для встроенного интерфейса
  var refAttr : Attribute;
3) описание области встроенного интерфейса
Embedded brExAttr interface;
  show at (,???,,);
end;
4) Встроить интерфейс внешних атрибутов
HandleEvent
cmInit:
{
   if NullvipRef (refAttr)
     LoadVipInterface (refAttr);
   BindEmbeddedInterface(brExAttr, refAttr);
   // вызвать функция перерисовки, указав код таблицы и нрек текущей записи
  либо RefAttr.reDraw(coTable, Table.nRec); - если атрибут всегда можно редактировать
  либо RefAttr.reDrawEx(coTable, Table.nRec, bRight); - если атрибут нужно редактировать согласно логике

}
5) обязательно при смене позиции
cmPositionChanged:
  либо RefAttr.reDraw(coTable, Table.nRec); - если атрибут всегда можно редактировать
  либо RefAttr.reDrawEx(coTable, Table.nRec, bRight); - если атрибут нужно редактировать согласно логике
6) выгрузить интерфейс при выходе
cmDone:
  FreeVipInterface (refAttr);

  Пример встраивания внешних атрибутов и внешней классификации можно увидеть в интерфейсе C_EXTCLASS::TESTEMBINTS
</PRE>
#end

ObjInterface objAttribute;
  #doc
  Функция отображает атрибуты и их значения.
  #end
  Function ReDraw (
  #doc
  Код таблицы, к которой привязан атрибут
  #end
                   _wTable : word;
  #doc
  Nrec записи, к которой привязан атрибут
  #end
                   _cRec : comp
  #doc
  <p>true - если запись AttrVal существует;
  <p>false - в противном случае;
  #end
                   ) : boolean;
End;

ObjInterface objAttributeV2;
 #doc
  Расширение функции ReDraw. Функция позволяет задать право на редактирование атрибутов.
  #end
  Function ReDrawEx(
  #doc
  Код таблицы, к которой привязан атрибут
  #end
                    _wTable : word;
  #doc
  Nrec записи, к которой привязан атрибут
  #end
                    _cRec : comp;
  #doc
  Возможность создания/редактирования/удаление атрибута. False - все операции с атрибутами запрещены, иначе разрешены.
  #end
                    _Enable : boolean
  #doc
  <p>true - если запись AttrVal существует;
  <p>false - в противном случае;
  #end
                    ) : boolean;
End;

ObjInterface objAttributeV3;
  #doc
  <brief>Функция запускает модально интерфейс Внешние атрибуты.</brief>
  Данная Функция должна быть использована вместо обычного запуска RunInterface(Atribute, ...) и сохранение прав в dsk.
  #end
  Function RunModal(
  #doc
  Код таблицы, к которой привязан атрибут
  #end
                    _wTable : word;
  #doc
  Nrec записи, к которой привязан атрибут
  #end
                    _cRec : comp;
  #doc
  Возможность создания/редактирования/удаление атрибута. false - все операции с атрибутами запрещены, иначе разрешены.
  Значение по умолчанию true.
  #end
                    _Enable: boolean = true
  #doc
  Возвращает команду, с которой завершился запуск.
  #end
  ) : word;
End;

VipInterface Attribute implements objAttribute, objAttributeV2, objAttributeV3
  licensed (FREE)  Parameters (TableCode : word; RecordNumber : comp; bNotEditAttribute : boolean = false);

VipInterface AttributeV2(Attribute)
  licensed (FREE)  Parameters (AttrRec : comp = 0);

VipInterface AttributeV3 (AttributeV2)
  licensed (FREE);

#doc
Точка расширения для возможности вызова своего диалога установки значения внешнего атрибута.<br>
</brief>
Обработчик точки расширения должен вернуть False, если обработка проводилась. Иначе - True.<br>
sAttrName - название внешнего атрибута<br>
coTable - код таблицы, к которой будет просматриваться/изменяться внешний атрибут<br>
cRec - ссылка на уникальный ключ в таблице coTable<br>
Разработчик в данном диалоге должен обеспечить создание/изменение значения для переданного внешнего атрибута<br>
c помошью методов, описанных в <link ObjInterface objExtAttr>objExtAttr</link>.
#end
ExtensionPoint epShowDialogSetAttrValue(sAttrName : string; coTable : word; cRec : comp);

#doc
Точка расширения для возможности перекрытия прав редактирования внешнего атрибута<br>
</brief>
Обработчик точки расширения должен вернуть False, если обработка проводилась и права есть на редактированиe. Иначе - True.<br>
sAttrName - название внешнего атрибута<br>
coTable - код таблицы, к которой будет просматриваться/изменяться внешний атрибут<br>
cRec - ссылка на уникальный ключ в таблице coTable
#end
ExtensionPoint epCanEditAttribute(sAttrName : string; coTable : word; cRec : comp);

#endif
