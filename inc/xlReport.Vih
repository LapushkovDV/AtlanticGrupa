//------------------------------------------------------------------------------
//                                                      (c) корпорация Галактика
// Галактика 9.10 - "XLT отчеты"
// Библиотека функций : "Формирования XLT отчетов"
//------------------------------------------------------------------------------

#ifndef __xlReport_Vih__
#define __xlReport_Vih__

#ifdef  ComponentVersion
#component "F_XLSRep"
#endif//ComponentVersion

//------------------------------------------------------------------------------
#include xlSetUp.Vih  // Визуальный интерфейс : "Настройка Excel отчетов"
#include xlType.Inc   // Типы данных используемые при формировании отчета
//------------------------------------------------------------------------------

//==============================================================================
#doc
Библиотека функций : "Формирования XLT отчетов"<br>
#end
ObjInterface iXLSRepBuilder;  //#region ObjInterface

  //============================================================================
  //#region ERROR
  //----------------------------------------------------------------------------
  #doc
     Возвращает последнюю ошибку работы с Excel
  #end
  function GetLastError : string;
  //#endregion ERROR
  //****************************************************************************

  //============================================================================
  //#region INIT/DONE EXCEL
  //----------------------------------------------------------------------------
  #doc
     <brief>Создание стандартного шаблона отчета (Constructor)</brief>
     Создание стандартного шаблона отчета, т.е. создаются сам XLT файл,
     и в нем заготовка стандартного макроса, формирования отчета.
     Возвращает имя созданного файла
     При необходимости, автоматически происходит
     инсталляция XLA библиотеки "Дизайнер отчетов"
  #end
  function CreateXLT(
    _XLTFileName : string;  // XLT шаблон
    _Visible     : boolean  // визуализация Excel
  ) : string;

  //----------------------------------------------------------------------------
  #doc
     <brief>Создание "пустого" отчета по XLT шаблону (Constructor)</brief>
     Создание "пустого" отчета по XLT шаблону, т.е. просто создает новый файл.
     Возвращает имя созданного файла
  #end
  function CreateReport(
    _XLTFileName : string;  // XLT шаблон
    _Visible     : boolean  // визуализация Excel
  ) : string;

  //----------------------------------------------------------------------------
  #doc
     Завершение сессии работы с Excel.
     (Destructor)<br>
  #end
  function DisConnectExcel : boolean;
  //#endregion INIT/DONE EXCEL
  //****************************************************************************

  //============================================================================
  //#region LOADREPORT
  //----------------------------------------------------------------------------
  #doc
     <brief>Формирование отчета по БД</brief>
     Формирование отчета по БД, т.е. загрузка данных из Excel БД _DBFileName
     в файл отчета _RepFileName.
     При необходимости, автоматически происходит
     инсталляция всех необходимых XLA библиотек
  #end
  function LoadRepFromDB(
    _DBFileName  : string;  // XLS файл с данными отчета (Excel БД)
    _RepFileName : string   // XLS файл отчета
  ) : boolean;

  //----------------------------------------------------------------------------
  #doc
     <brief>Формирование отчета</brief>
     Формирование отчета, т.е. загрузка данных из Excel БД _RepFileName
     в файл отчета _RepFileName (случай когда данные отчета были выгружены в сам файл отчета)
     При необходимости, автоматически происходит
     инсталляция всех необходимых XLA библиотек
  #end
  function LoadReport(
    _RepFileName : string
  ) : boolean;
  //#endregion LOADREPORT
  //****************************************************************************

  //============================================================================
  //#region REPORT_VARS
  //----------------------------------------------------------------------------
  #doc
     Создать определения переменных в XLS БД<br>
     (Vars Constructor)
  #end
  function CreateVar(
    _DBFileName : string   // XLS БД
  ) : boolean;

  //----------------------------------------------------------------------------
  #doc
     Все необходимые пост действия, по опубликованию таблицы для внешних источников<br>
     (Vars Destructor)
  #end
  function PublishVar : boolean;

  //----------------------------------------------------------------------------
  #doc
  <brief>Установить значение переменной _VarName в значение _Value</brief>
     Установить значение переменной _VarName в значение _Value.
     Тип переменное в XLS БД будет String,
     _VarType - является дополнительным описанием типа,
     это описание возможно использовать уже при формировании самого отчета
  #end
  function SetVar(_VarName : string; _VarType : string; _Value : string) : boolean;
  //----------------------------------------------------------------------------
  #doc
     Установить значение переменной _VarName в значение _Value (тип String)
  #end
  function SetStringVar(_VarName : string; _Value : string) : boolean;
  //----------------------------------------------------------------------------
  #doc
     Установить значение переменной _VarName в значение _Value (тип Number)
  #end
  function SetNumberVar(_VarName : string; _Value : double) : boolean;
  //----------------------------------------------------------------------------
  #doc
     Установить значение переменной _VarName в значение _Value (тип Date)
  #end
  function SetDateVar(_VarName : string; _Value : date) : boolean;

  //----------------------------------------------------------------------------
  #doc
     Добавить примечание к заголовку переменной отчета
  #end
  function SetVarComment(
    _VarName : string;
    _Comment : string
  ) : boolean;
  //----------------------------------------------------------------------------
  #doc
     Добавить примечание к значению переменной отчета
  #end
  //----------------------------------------------------------------------------
  function SetVarValueComment(
    _VarName : string;
    _Comment : string
  ) : boolean;
  //#endregion REPORT_VARS
  //****************************************************************************

  //============================================================================
  //#region REPORT_Table
  //----------------------------------------------------------------------------
  #doc
     Начать сессию формирования таблиц в XLS БД<br>
     (Table Constructor)
  #end
  function CreateTbls(
    _DBFileName : string   // XLS БД
  ) : boolean;
  //----------------------------------------------------------------------------
  #doc
     Создать таблицу в XLS БД.
     Наименование таблицы задается без "стандартного префикса"<br>
     (Table Constructor)<br>
  #end
  function CreateTbl(
    _TblName    : string   // Наименование таблицы
  ) : boolean;

  //----------------------------------------------------------------------------
  #doc
     Все необходимые пост действия, по опубликованию таблицы для внешних источников<br>
     (Table Destructor)<br>
  #end
  function PublishTbl(
    _TblName : string      // Наименование таблицы
  ) : boolean;

  //----------------------------------------------------------------------------
  #doc
  <brief>Создать поле таблицы, определенной в CreateTable</brief>
     Создать поле таблицы, определенной в CreateTable.
     Наименование поля таблицы задается без "стандартного префикса"
  #end
  function CreateTblFld(
    _TblFldName : string   // Наименование поля таблицы
  ) : boolean;

  //----------------------------------------------------------------------------
  #doc
     Добавить примечание к заголовку поля таблицы
  #end
  function SetTblFldComment(
    _TblFldName : string;
    _Comment    : string
  ) : boolean;

  //----------------------------------------------------------------------------
  #doc
     Очистить буфер записи таблицы определенной в CreateTable
  #end
  function ClearTblBuffer : boolean;

  //----------------------------------------------------------------------------
  #doc
     Установить текущее значение поля таблицы _TblFldName в значение _Value (тип String)
  #end
  function SetTblStringFldValue(_TblFldName : string; _Value : string) : boolean;
  //----------------------------------------------------------------------------
  #doc
     Установить текущее значение поля таблицы _TblFldName в значение _Value (тип Number)
  #end
  function SetTblNumberFldValue(_TblFldName : string; _Value : double) : boolean;
  //----------------------------------------------------------------------------
  #doc
     Установить текущее значение поля таблицы _TblFldName в значение _Value (тип Date)
  #end
  function SetTblDateFldValue(_TblFldName : string; _Value : date) : boolean;

  //----------------------------------------------------------------------------
  #doc
     Добавить примечание к текущему значению поля таблицы
  #end
  function SetTblFldValueComment(
    _TblFldName : string;
    _Comment    : string
  ) : boolean;

  //----------------------------------------------------------------------------
  #doc
     Вставить текущие значения полей в таблицу
  #end
  function InsTblRow : boolean;
  //#endregion REPORT_Table
  //****************************************************************************

  //============================================================================
  //#region DIALOG
  //----------------------------------------------------------------------------
  #doc
     <brief>Диалог формирования/отладки XLT шаблонов</brief>
     Диалог формирования/отладки XLT шаблонов:
     <ul>
     <li> _wXltMode     - режим запуска
       <ul>
       <li> cgxlRepDlg_CreateRep   - формирование отчета
       <li> cgxlRepDlg_CreateTempl - создание шаблона
       </ul>
     <li> _XLTFileName   - файл шаблона<br>
     </ul>
  #end
  function RunMakeXLT(
  var _wXltMode    : word;
  var _XLTFileName : string
  ) : boolean;

  //----------------------------------------------------------------------------
  #doc
     <brief>Диалог формирования отчетов</brief>
     Диалог формирования отчетов:
     <ul>
     <li> _wRunMode     - режим запуска
       <ul>
       <li> cgxlRepDlg_MakeXLT       - стандартный диалог формирования/отладки XLT - шаблонов<br>
       <li> cgxlRepDlg_MakeRep       - создание отчета с предварительным сохранением<br>
       <li> cgxlRepDlg_TuneRep       - создание отчета без сохранения<br>
       </ul>
     <li> _wRetMode     - если создается шаблон то возвращается 1
     <li> _XLTFileName  - файл шаблона
     <li> _RepFileName  - файл отчета
     </ul>
  #end
  function RunRepDialog(
      _wRunMode    : word;
  var _wRetMode    : word;
  var _XLTFileName : string;
  var _RepFileName : string
  ) : boolean;

  //----------------------------------------------------------------------------
  #doc
     <brief>Диалог формирования отчетов по ID-отчета</brief>
     Диалог формирования отчетов по ID-отчета:<br>
     <ul>
     <li> _wRunMode     - режим запуска
       <ul>
       <li> cgxlRepDlg_MakeXLT       - стандартный диалог формирования/отладки XLT - шаблонов<br>
       <li> cgxlRepDlg_MakeRep       - создание отчета с предварительным сохранением<br>
       <li> cgxlRepDlg_TuneRep       - создание отчета без сохранения<br>
       </ul>
     <li> _RepID        - идентификатор отчета
     <li> _wRetMode     - если создается шаблон то возвращается 1
     <li> _XLTFileName  - файл шаблона
     <li> _RepFileName  - файл отчета
     </ul>
  #end
  function RunRepIDDialog(
      _wRunMode    : word;
  var _wRetMode    : word;
  var _XLTFileName : string;
  var _RepFileName : string;
      _RepID       : string
  ) : boolean;

  //----------------------------------------------------------------------------
  #doc
     Запуск VIP-окна, для просмотра отчета
  #end
  function ShowReport(
    _RepFileName : string
  ) : boolean;
  //#endregion DIALOG
  //****************************************************************************

End; //#endregion ObjInterface
//******************************************************************************


//==============================================================================
#doc
Библиотека функций : "Формирования XLT отчетов" (доп. версия 01)<br>
#end
ObjInterface iXLSRepBuilder_V01(iXLSRepBuilder);  //#region ObjInterface

  //============================================================================
  //#region INIT/DONE EXCEL
  //----------------------------------------------------------------------------
  #doc
     <brief>Создание "пустого" отчета по XLT шаблону (Constructor)</brief>
     Создание "пустого" отчета по XLT шаблону, т.е. просто создает новый файл.
     Возвращает имя созданного файла
  #end
  function CreateNextReport(
    _XLTFileName : string;  // XLT шаблон
    _Visible     : boolean  // визуализация Excel
  ) : string;
  //#endregion INIT/DONE EXCEL
  //****************************************************************************

  //============================================================================
  //#region REPORT_VARS
  //----------------------------------------------------------------------------
  #doc
     Установить массив строк в переменную _VarName
  #end
  function SetArrStrVar(
    _VarName : string;     // имя переменной
    _Value   : TXLS_ArrStr // массив строк (см. xlType.Inc)
  ) : boolean;
  //----------------------------------------------------------------------------
  #doc
     Вывести содержимое файла в переменную _VarName.
  #end
  function SetFileVar(
    _VarName  : string;    // имя переменной
    _FID      : TPtr;   // ссылка на объект File, полученная методом Handle.
    _sDivider : string     // разделитель строк, например chr(10)
  ) : boolean;
  //----------------------------------------------------------------------------
  #doc
     Вывести содержимое AllMemo.Mem в переменную _VarName
  #end
  function SetAllMemoVar(
    _VarName  : string;    // имя переменной
    _Value    : comp;      // AllMemo.NRec
    _sDivider : string     // разделитель строк, например chr(10)
  ) : boolean;

  //----------------------------------------------------------------------------
  #doc
     Установить массив строк примечания к значению переменной отчета
  #end
  function SetArrStrVarValueComment(
    _VarName : string;     // имя переменной
    _Value   : TXLS_ArrStr // массив строк (см. xlType.Inc)
  ) : boolean;
  //----------------------------------------------------------------------------
  #doc
     Вывести содержимое файла в примечания к значению переменной отчета
  #end
  function SetFileVarValueComment(
    _VarName  : string;    // имя переменной
    _FID      : TPtr;   // ссылка на объект File, полученная методом Handle.
    _sDivider : string     // разделитель строк, например chr(10)
  ) : boolean;
  //----------------------------------------------------------------------------
  #doc
     Вывести содержимое AllMemo.Mem в примечания к значению переменной отчета
  #end
  function SetAllMemoVarValueComment(
    _VarName  : string;    // имя переменной
    _Value    : comp;      // AllMemo.NRec
    _sDivider : string     // разделитель строк, например chr(10)
  ) : boolean;
  //#endregion REPORT_VARS
  //****************************************************************************

  //============================================================================
  //#region REPORT_Table
  //----------------------------------------------------------------------------
  #doc
     Добавить строку к текущему значению поля таблицы _TblFldName
  #end
  function AddTblStringFldValue(
    _TblFldName : string;     // имя поля таблицы
    _Value      : string      // добавляемая строка
  ) : boolean;
  //----------------------------------------------------------------------------
  #doc
     Установить массив строк в значение поля таблицы _TblFldName
  #end
  function SetTblArrStrFldValue(
    _TblFldName : string;     // имя поля таблицы
    _Value      : TXLS_ArrStr // массив строк (см. xlType.Inc)
  ) : boolean;
  //----------------------------------------------------------------------------
  #doc
     Вывести содержимое файла в поля таблицы _TblFldName
  #end
  function SetTblFileFldValue(
    _TblFldName : string;     // имя поля таблицы
    _FID        : TPtr;    // ссылка на объект File, полученная методом Handle.
    _sDivider   : string      // разделитель строк, например chr(10)
  ) : boolean;
  //----------------------------------------------------------------------------
  #doc
     Вывести содержимое AllMemo.Mem в поля таблицы _TblFldName
  #end
  function SetTblAllMemoFldValue(
    _TblFldName : string;     // имя поля таблицы
    _Value      : comp;       // AllMemo.NRec
    _sDivider   : string      // разделитель строк, например chr(10)
  ) : boolean;


  //----------------------------------------------------------------------------
  #doc
     Добавить строку примечания к текущему значению поля таблицы
  #end
  function AddTblFldValueComment(
    _TblFldName : string;     // имя поля таблицы
    _Value      : string      // добавляемая стока
  ) : boolean;
  //----------------------------------------------------------------------------
  #doc
     Установить массив строк в примечание к текущему значению поля таблицы
  #end
  function SetTblArrStrFldValueComment(
    _TblFldName : string;     // имя поля таблицы
    _Value      : TXLS_ArrStr // массив строк (см. xlType.Inc)
  ) : boolean;
  //----------------------------------------------------------------------------
  #doc
     Вывести содержимое файла в примечание к текущему значению поля таблицы
  #end
  function SetTblFileFldValueComment(
    _TblFldName : string;     // имя поля таблицы
    _FID        : TPtr;    // ссылка на объект File, полученная методом Handle.
    _sDivider   : string      // разделитель строк, например chr(10)
  ) : boolean;
  //----------------------------------------------------------------------------
  #doc
     Вывести содержимое AllMemo.Mem в примечание к текущему значению поля таблицы
  #end
  function SetTblAllMemoFldValueComment(
    _TblFldName : string;     // имя поля таблицы
    _Value      : comp;       // AllMemo.NRec
    _sDivider   : string      // разделитель строк, например chr(10)
  ) : boolean;
  //#endregion REPORT_Table
  //****************************************************************************

End; //#endregion ObjInterface
//******************************************************************************


//==============================================================================
#doc
Библиотека функций : "Формирования XLT отчетов" (доп. версия 02)<br>
#end
ObjInterface iXLSRepBuilder_V02(iXLSRepBuilder_V01);  //#region ObjInterface

  //============================================================================
  //#region EXCEL VERTION
  //----------------------------------------------------------------------------
  #doc
    Определяет расширение Excel в зависимости от версии
  #end
  function ExcelCurVer : string;
  //#endregion EXCEL VERTION
  //****************************************************************************

End; //#endregion ObjInterface
//******************************************************************************


//==============================================================================
VipInterface XLSRepBuilder implements
  IXLSRepBuilder
, IXLSRepBuilder_V01
, IXLSRepBuilder_V02
#Licensed_Free;

#endif//__xlReport_Vih__
