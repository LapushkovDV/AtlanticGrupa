//******************************************************************************
// Droga - Samusenko                                    (c) корпорация Галактика
// Галактика 8.10 - обмен бизнес-документами  Экспорт
// STS - Basedoc - Документы-основания
// предобработка документов от STS Logistics
//******************************************************************************

  sFileImp := getFirstFile(ieHead.messageDir, sFileMask); //ищем первый файл подтверждения от СТС по маске
  if (sFileImp <> strDataIsEmpty) {
    //создаем временный файл для формирования файла загрузки
    sFileTmp := CreateTmpFileName;//translatePath('%USERPROFILE%')+ '\temp\doc_in.dbf';
    if (sFileTmp = '') {
      message(''#3'Ошибка при создании файла загрузки '+ sFileTmp+ ''#13#3'(HandleOut = 0)');
      exit;
    }
    dbf_handle := dbfOpen(sFileTmp, stCreate); //открываем handle dbf
    if (dbf_handle = 0) {
      message(''#3'Ошибка при открытии файла '+ sFileTmp+ ''#13#3'(HandleOut = 0)');
      exit;
    }
    //создаем структуру dbf
    dbfAddField(dbf_handle, 'descr', dbChar, 20, 0);
    dbfAddField(dbf_handle, 'desgr', dbChar, 4, 0);
    dbfAddField(dbf_handle, 'num', dbChar, 40, 0);
    dbfAddField(dbf_handle, 'dat', dbDate, 8,0);
    dbfAddField(dbf_handle, 'val', dbChar, 30, 0);
    dbfAddField(dbf_handle, 'type', dbChar, 80, 0);
    dbfAddField(dbf_handle, 'ndoc', dbChar, 40, 0);
    dbfAddField(dbf_handle, 'ddoc', dbDate, 8,0);
    dbfAddField(dbf_handle, 'ndog', dbChar, 40, 0);
    dbfAddField(dbf_handle, 'ddog', dbDate, 8,0);
    dbfAddField(dbf_handle, 'vhnal', dbNum, 2, 0);
    dbfAddField(dbf_handle, 'form', dbChar, 80, 0); //форма расчета
    dbfAddField(dbf_handle, 'remark', dbChar, 80, 0); //примечание в ДО
    dbfAddField(dbf_handle, 'status', dbChar, 80, 0);
    dbfAddField(dbf_handle, 'cust_inn', dbChar, 20, 0); //контрагент
    dbfAddField(dbf_handle, 'cust_nam', dbChar, 150, 0);
//    dbfAddField(dbf_handle, 'cust_bik', dbChar, 20, 0);
//    dbfAddField(dbf_handle, 'cust_acc', dbChar, 40, 0);
    dbfAddField(dbf_handle, 'send_inn', dbChar, 20, 0); //отправитель
    dbfAddField(dbf_handle, 'send_nam', dbChar, 150, 0);
    dbfAddField(dbf_handle, 'dest_inn', dbChar, 20, 0); //получатель
    dbfAddField(dbf_handle, 'dest_nam', dbChar, 150, 0);
//    dbfAddField(dbf_handle, 'own_bik', dbChar, 20, 0); //собственный
//    dbfAddField(dbf_handle, 'own_acc', dbChar, 40, 0);
    dbfAddField(dbf_handle, 'pos_type', dbNum, 2, 0);
    dbfAddField(dbf_handle, 'pos_num', dbNum, 8, 0);
    dbfAddField(dbf_handle, 'code', dbChar, 30, 0);
    dbfAddField(dbf_handle, 'name', dbChar, 80, 0);
    dbfAddField(dbf_handle, 'qty', dbNum , 15, 5);
    dbfAddField(dbf_handle, 'unit', dbChar, 80, 0);
    dbfAddField(dbf_handle, 'price', dbNum , 15, 5);
    dbfAddField(dbf_handle, 'vprice', dbNum , 15, 5);
    dbfAddField(dbf_handle, 'pos_val', dbChar, 30, 0);
    dbfAddField(dbf_handle, 'party', dbChar, 80, 0);
    dbfAddField(dbf_handle, 'ware', dbChar, 80, 0);
    dbfAddField(dbf_handle, 'sprice', dbNum , 15, 5);
    //цикл по входящим файлам
    startNewVisual(vtRotateVisual, vfTimer+vfBreak+vfConfirm, ''#3'Обработка входящих данных '+ sFileMask+ '...', 0);
    //delete all tSopr;
    hdr := '';
    do {
      if not nextVisual() break;
      wasErrorImp := false;
      _try {
        writeLog('Обработка файла: '+ sFileImp, 1);
        fSrc.openFile(sFileImp, stOpenRead);
        fSrc.seek(0);
        while not fSrc.eof() do { //обрабатываем строки входящего файла
          fSrc.readLn(str);
          str += ';';
          if pos('H;', str) = 1 { //заголовок документа
            hdr := '';
            code := comp(parseWord(str, 4, ';')); //код заказа (basedoc.nrec)
            //if (code = 0) code := comp(parseWord(str, 14, ';'));
            wasErrorImp := (getfirst basedoc where ((code==nrec)) <> tsOk); //ищем исходный документ в Галактике
            if wasErrorImp {
              writeLog(' --- ERROR: не найден документ (BASEDOC.NREC='+ string(code, 0, 0)+ '). Файл пропущен!', 1);
              continue;
            }
            writeLog('Обработка подтверждения документа № '+ basedoc.nodoc+ datetostr(basedoc.ddoc, ' от DD.MM.YYYY ')+ '...', 1);
            //if (insert tSopr set nRec = basedoc.nrec) <> tsOk {}
            wasErrorImp := (getfirst katorg where ((basedoc.corg==nrec)) <> tsOk);
            if wasErrorImp {
              writeLog(' --- ERROR: не найден контрагент (KATORG.NREC='+ string(basedoc.corg, 0, 0)+ '). Файл пропущен!', 1);
              continue;
            }
            hdr := 'H';
            //заполняем информацию в dbf
            dbfClearBuffer(dbf_handle);
            dbfPutFieldValue(dbf_handle, 'type', 1);
            dbfPutFieldValue(dbf_handle, 'descr', basedoc.descr);
            dbfPutFieldValue(dbf_handle, 'desgr', 'IMP');
            dbfPutFieldValue(dbf_handle, 'status', 'Оформляемый');
            dbfPutFieldValue(dbf_handle, 'type', 'Основание на закупку');
            //num := parseWord(str, 14, ';');
            //if (num = '') num := parseWord(str, 9, ';');
            dbfPutFieldValue(dbf_handle, 'num', basedoc.nodoc);
            dbfPutFieldValue(dbf_handle, 'dat', parseWord(str, 5, ';'));
            dbfPutFieldValue(dbf_handle, 'ndoc', basedoc.nodoc);
            dbfPutFieldValue(dbf_handle, 'ddoc', datetostr(basedoc.ddoc, ieHead.dFormat));
            if (getfirst dogovor where ((basedoc.cdogovor==nrec)) = tsOk) {
              dbfPutFieldValue(dbf_handle, 'ndog', dogovor.nodoc);
              dbfPutFieldValue(dbf_handle, 'ddog', datetostr(dogovor.ddoc, ieHead.dFormat));
            }
            if (getfirst katpayment where ((basedoc.cpayment==nrec)) = tsOk)
              dbfPutFieldValue(dbf_handle, 'form',katpayment.name);
            dbfPutFieldValue(dbf_handle, 'vhnal', basedoc.vhodnal);
            if (getfirst klval where ((basedoc.cval==nrec)) = tsOk) {
              dbfPutFieldValue(dbf_handle, 'val', klval.dollar);
              dbfPutFieldValue(dbf_handle, 'pos_val', klval.dollar);
            }
            dbfPutFieldValue(dbf_handle, 'cust_inn', katorg.unn);
            dbfPutFieldValue(dbf_handle, 'cust_nam', katorg.name);
            dbfPutFieldValue(dbf_handle, 'remark', basedoc.name);
            if (getfirst katorg where ((basedoc.cgrotpr==nrec)) = tsOk) {
              dbfPutFieldValue(dbf_handle, 'send_inn', katorg.unn);
              dbfPutFieldValue(dbf_handle, 'send_nam', katorg.name);
            }
            if (getfirst katorg where ((basedoc.cgrpol==nrec)) = tsOk) {
              dbfPutFieldValue(dbf_handle, 'dest_inn', katorg.unn);
              dbfPutFieldValue(dbf_handle, 'dest_nam', katorg.name);
            }
            tmp := trim(parseWord(str, 6, ';')); //ГТД -> партия
            if (tmp <> '') {
              if (getfirst katparty where ((tmp == name)) <> tsOk) {
                insert katparty set name = tmp;
                tmp := trim(parseWord(str, 7, ';')); //Страна происхождения
                //insert exclassval set ...; //добавить классификатор
              }
              dbfPutFieldValue(dbf_handle, 'party', katparty.name);
            }
            npp := 0;
            //переносим в dbf информацию по транспортным услугам из исходного документа - в подтверждении от СТС ее нет!
            if (getfirst stepdoc where ((basedoc.nrec == cbasedoc)) = tsOk) {
              _loop spstep where ((stepdoc.nrec == cstepdoc and comp(4) == prmc)) {
                if (getfirst katusl where ((spstep.cmcusl == nrec)) <> tsOk) {}
                if (getfirst katotped where ((spstep.cotped == nrec)) <> tsOk) {}
                dbfPutFieldValue(dbf_handle, 'type', spstep.prmc);
                dbfPutFieldValue(dbf_handle, 'pos_num', spstep.npp);
                dbfPutFieldValue(dbf_handle, 'code', katusl.kod);
                dbfPutFieldValue(dbf_handle, 'name', katusl.name);
                dbfPutFieldValue(dbf_handle, 'qty', string(spstep.kol));
                dbfPutFieldValue(dbf_handle, 'price', string(spstep.price));
                //dbfPutFieldValue(dbf_handle, 'vprice', string(spstep.vprice));
                dbfPutFieldValue(dbf_handle, 'unit', katotped.name);
                dbfInsertRecord(dbf_handle);
              }
            }
          }
          else
          if hdr <> '' { //спецификация документа
            //npp++;
            tmp := parseWord(str, 4, ';'); //код товара
            if (getfirst katmc where ((tmp==barkod2)) <> tsOk) {
              writeLog(' Не найден товар с кодом '+ tmp+ '. Строка пропущена!', 1);
              continue;
            }
            prc := 0;
            qty := double(parseWord(str, 5, ';'));
            code := comp(parseWord(str, 3, ';')); //код строки
            if (getfirst spstep where ((code==nrec)) = tsOk) {
              npp := spstep.npp;
              if (spstep.cmcusl = katmc.nrec) {
                prc := spstep.price;
                if (spstep.kol <> qty) {
                  writeLog(' В исходном документе в позиции № '+ string(npp)+ ' указано количество: '+ string(spstep.kol)+ '. В загружаемом файле: '+ string(qty)+ '!', 1);
                }
              }
              else {
                writeLog(' В исходном документе к позиции № '+ string(npp)+ ' привязан товар '+ string(katmc.barkod2,0,0)+ '. Цена не установлена!', 1);
              }
            }
            else {
              writeLog(' В исходном документе не найдена позиция '+ string(code,0,0)+ '. Цена не установлена!', 1);
            }
            if word(parseWord(str, 9, ';')) = 2 { // брак
              dbfPutFieldValue(dbf_handle, 'ware', 'Склад брака Домодедово (Адмирал)');
            }
            else {
              dbfPutFieldValue(dbf_handle, 'ware', 'Склад Домодедово (Адмирал)');
            }
            dbfPutFieldValue(dbf_handle, 'type', 1);
            dbfPutFieldValue(dbf_handle, 'pos_num', npp);
            dbfPutFieldValue(dbf_handle, 'code', katmc.barkod);
            dbfPutFieldValue(dbf_handle, 'name', katmc.name);
            dbfPutFieldValue(dbf_handle, 'qty', qty);
            dbfPutFieldValue(dbf_handle, 'price', string(spstep.price));
            //dbfPutFieldValue(dbf_handle, 'vprice', string(spstep.vprice));
            dbfPutFieldValue(dbf_handle, 'unit', iso2unit(parseWord(str, 6, ';')));
            //fDst.writeLn(hdr+ tmp);
            dbfInsertRecord(dbf_handle);
          }
        } // while not eof
      }
      _except
        on ExFile: {
          wasErrorImp := true;
          writeLog(' --- ERROR: ошибка работы с файлом выгрузки '''+ sFileImp+ '''', 1);
        }
      _finally {
        fSrc.close;
      }
      if not wasErrorImp {
        //перемещаем обработанный файл от СТС в архивную папку
        if copyMoveFile(sFileImp, replace(sFileImp, ieHead.messageDir, sPathArch), true, ecmfClientFrom+ ecmfClientTo) {
          logErr := 'Файл перемещен в папку Arch';
        }
        else {
          logErr := ' --- ERROR: ошибка перемещения файла в Arch!';
        }
        writeLog(logErr, 1);
        logErr := 'Файл: '+ sFileImp+ ' обработан';
      }
      else
        logErr := 'Файл: '+ sFileImp+ ' не обработан';
      writeLog(logErr, 1);
      sFileImp := GetNextFile; //ищем следующий входящий файл от СТС
    } while (sFileImp <> strDataIsEmpty);
    //перемещаем документы в папку ДО на предоплату - не надо,т.к. теперь грузим в накладные!
/*    _loop tSopr
      if (getfirst basedoc where ((tSopr.nRec==nrec)) = tsOk) {
        if (basedoc.viddoc = iehead.subtipdoc)
          if (update current basedoc set viddoc = iehead.subtipdoc+ 10, specyes = 1, procopl = 100) = tsOk {
            writeLog(' Исходный документ перенесен в папку ''ДО на предоплату''', 1);
          }
      }
*/
    stopVisual('', 0);
    dbfClose(dbf_handle);
    //перемещаем сформированный временный файл в папку обмена для импорта в Галактику
    if not copyMoveFile(sFileTmp, sFileName, true, ecmfClientFrom+ ecmfClientTo)
      message(''#3'Ошибка перемещения DBF в папку обмена!');
  }
  else message('Нет файлов для импорта', information);
